@{
    string addUrl = "/" + ViewContext.RouteData.Values["area"] + "/" + ViewContext.RouteData.Values["controller"].ToString() + "/" + "Add";
    string listUrl = "/" + ViewContext.RouteData.Values["area"] + "/" + ViewContext.RouteData.Values["controller"].ToString() + "/" + "List";
    string deleteUrl = "/" + ViewContext.RouteData.Values["area"] + "/" + ViewContext.RouteData.Values["controller"].ToString() + "/" + "Delete";
    string detailUrl = "/" + ViewContext.RouteData.Values["area"] + "/" + ViewContext.RouteData.Values["controller"].ToString() + "/" + "Detail";
}
<section class="pc-container custom-container">
    <div class="pc-content custom-content">
        <!-- [ Main Content ] start -->
        <div class="row">
            <!-- [ form-element ] start -->
            <div class="col-sm-12">
                <!-- HTML Input Types -->
                <div class="card">
                    <div class="card-header custom-page-header">
                        <h5>@Localizer["admin." + ViewContext.RouteData.Values["controller"].ToString()] @Localizer["admin.Listele"]</h5>
                        <div class="btn-group" role="group" aria-label="button groups">
                            @if (Model.MenuPermission?.Add)
                            {
                                <button type="button" onclick="GetPage('0','@addUrl');" class="btn btn-light-primary">@Localizer["admin.Yeni Ekle"]</button>
                            }
                        </div>
                    </div>
                    <div class="card-body">
                        <center id="resetButton" style="display: none">
                            <button type="button" class="btn btn-sm btn-warning" onclick="UserTableAdd(@Model.MenuPermission?.MenuId,''); SayfaYenile();"><i class="fas fa-history"></i></button>
                        </center>
                        <div class="dt-responsive table-responsive">
                            <table class="table table-striped table-bordered nowrap" id="listTable">
                                <thead>
                                    <tr>
                                        <th>@Localizer["admin.ID"]</th>
                                        <th>@Localizer["admin.Kodu"]</th>
                                        <th>@Localizer["admin.Başlık"]</th>
                                        <th>@Localizer["admin.Tipi"]</th>
                                        <th>@Localizer["admin.Sırası"]</th>
                                        <th>@Localizer["admin.Durum"]</th>
                                        <th>@Localizer["admin.Kayit Tarihi"]</th>
                                        <th style="width:220px;text-align:center">@Localizer["admin.İşlemler"]</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (BlogLanguageInfo item in Model.BlogLanguageInfos)
                                    {
                                        <tr id="trSatir-@item.Blog.Id">
                                            <td>@item.Blog.Id</td>
                                            <td>@item.Blog.Code</td>
                                            <td>@item.Title</td>
                                            <td>@item.Blog.BlogType.Title</td>
                                            <td>@item.Blog.Sequence</td>
                                            <td class="text-center">
                                                @if (item.Blog.Status)
                                                {
                                                    <div class="badge rounded-pill text-bg-success">@Localizer["admin.Aktif"]</div>
                                                }
                                                else
                                                {
                                                    <div class="badge rounded-pill text-bg-danger">@Localizer["admin.Pasif"]</div>
                                                }
                                            </td>
                                            <td data-sort="@item.Blog.CreatedDate.ToString("yyyyMMddHHmmssfff")">@item.Blog.CreatedDate</td>
                                            <td style="text-align:center">
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <button type="button" onclick="dataDetail('@item.Blog.Id');" id="detay-@item.Blog.Id" class="btn btn-info">@Localizer["admin.Detay"]</button>
                                                    @if (Model.MenuPermission?.Edit)
                                                    {
                                                        <button type="button" onclick="GetPage('0','@addUrl','@item.Blog.Id');" class="btn btn-success edit-button">@Localizer["admin.Düzenle"]</button>
                                                    }
                                                    @if (Model.MenuPermission?.Delete)
                                                    {
                                                        <button type="button" onclick="dataDelete('0','@item.Blog.Id');" class="btn btn-danger">@Localizer["admin.Sil"]</button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- [ form-element ] end -->
        </div>
        <!-- [ Main Content ] end -->
    </div>
</section>
<div id="detailModalDiv">
</div>
<partial name="/Areas/Admin/Views/Shared/_ListScripts.cshtml" />
<script type="text/javascript">
    function dataDetail(Id) {
        document.getElementById("detay-" + Id).disabled = true;
        $.ajax({
            type: "GET",
            url: "@detailUrl",
            data: { 'Id': Id },
            success: function (res) {
                $('#detailModalDiv').html(res);
                $("#detailModal").modal("show");
                document.getElementById("detay-" + Id).disabled = false;
            },
            error: function (jqXHR, status, errorThrown) {
                alert("Result: " + status + " Status: " + jqXHR.status);
            }
        });
    }

    function dataDelete(menuId, Id) {
        if (confirm('Silmek İstediğinize Emin misiniz ?')) {
            $.ajax({
                type: "GET",
                url: "@deleteUrl",
                data: { 'menuId': menuId, 'Id': Id },
                success: function (res) {
                    console.log(res);
                    if (res.status == "success") {
                        document.getElementById('trSatir-' + Id).style.display = "none";
                    } else {
                        alert(res.message);
                    }
                },
                error: function (jqXHR, status, errorThrown) {
                    alert("Result: " + status + " Status: " + jqXHR.status);
                }
            });
        }
    }

    $(document).ready(function () {
        var buttonlar = [];
        var menuPermissionExport = "@Model.MenuPermission?.Export";
        var menuId = '@Model.MenuPermission?.MenuId';
   
        if (menuPermissionExport === "True") {
            buttonlar = [
                {
                    extend: 'pageLength',
                    text: '@Localizer["admin.Satır"]',
                    titleAttr: '@Localizer["admin.Sayfada Gösterilecek Satir Sayısı"]',
                },
                {
                    extend: 'copyHtml5',
                    text: '@Localizer["admin.Kopyala"]',
                    exportOptions: {
                        columns: ':visible',
                        stripHtml: true // HTML etiketlerini temizler
                    }
                },
                {
                    extend: 'excelHtml5',
                    text: '@Localizer["admin.Excel"]',
                    exportOptions: {
                        columns: ':visible',
                        stripHtml: true // HTML etiketlerini temizler
                    }
                },
                {
                    extend: 'pdfHtml5',
                    text: '@Localizer["admin.Pdf"]',
                    orientation: 'landscape', // Yatay görünüm
                    exportOptions: {
                        columns: ':visible',
                        stripHtml: true // HTML etiketlerini temizler
                    }
                },
                {
                    extend: 'print',
                    text: '@Localizer["admin.Yazdır"]',
                    exportOptions: {
                        columns: ':visible',
                        stripHtml: true // HTML etiketlerini temizler
                    }
                },
                {
                    extend: 'colvis',
                    text: '@Localizer["admin.Gizle"]'
                }
            ];
        }

        var table = $('#listTable').DataTable({
            order: [1, 'asc'], // Varsayılan sıralama
            dom: 'Bfrtip', // DataTable DOM yapısı
            pageLength: 25, // Varsayılan sayfa uzunluğu
            buttons: buttonlar,
            stateSave: true, // Tablo durumu kaydedilsin
            stateSaveCallback: function (settings, data) {
                // State kaydetme
                UserTableAdd(menuId, JSON.stringify(data));

                // Data nesnesini kontrol et
                if (data && Array.isArray(data.columns)) {
                    var closeSutun = 0;

                    for (const column of data.columns) {
                        if (column.visible === false) {
                            closeSutun++;
                        }
                    }

                    // Reset butonunun görünürlüğünü ayarla
                    document.getElementById("resetButton").style.display = closeSutun > 0 ? "block" : "none";
                } else {
                    console.error("Data.columns bulunamadı veya uygun formatta değil:", data);
                }
            },
            stateLoadCallback: function (settings, callback) {
                closeSutun = UserTableList(menuId, callback);
                if (closeSutun > 0) {
                    document.getElementById("resetButton").style.display = "block";
                } else {
                    document.getElementById("resetButton").style.display = "none";
                }
            },
        });
        DataTableSet("@listUrl");
    });
</script>